package korat.instrumentation.bytecode;

/**
 * 
 * @author Aleksandar Milicevic <aca.milicevic@gmail.com>
 *
 */
public interface BytecodeVisitor {

    /**
     * This method should be invoked just before calling any of the
     * <em>visit</em> methods.
     */
    void preVisit(BytecodeInstruction instr);
    
    /**
     * This method should be invoked immediately after calling any 
     * of the <em>visit</em> methods.
     */
    void postVisit(BytecodeInstruction instr);
    
    void visitNOP(BytecodeInstruction instr);
    void visitACONST_NULL(BytecodeInstruction instr);
    void visitICONST_M1(BytecodeInstruction instr);
    void visitICONST_0(BytecodeInstruction instr);
    void visitICONST_1(BytecodeInstruction instr);
    void visitICONST_2(BytecodeInstruction instr);
    void visitICONST_3(BytecodeInstruction instr);
    void visitICONST_4(BytecodeInstruction instr);
    void visitICONST_5(BytecodeInstruction instr);
    void visitLCONST_0(BytecodeInstruction instr);
    void visitLCONST_1(BytecodeInstruction instr);
    void visitFCONST_0(BytecodeInstruction instr);
    void visitFCONST_1(BytecodeInstruction instr);
    void visitFCONST_2(BytecodeInstruction instr);
    void visitDCONST_0(BytecodeInstruction instr);
    void visitDCONST_1(BytecodeInstruction instr);
    void visitBIPUSH(BytecodeInstruction instr);
    void visitSIPUSH(BytecodeInstruction instr);
    void visitLDC(BytecodeInstruction instr);
    void visitLDC_W(BytecodeInstruction instr);
    void visitLDC2_W(BytecodeInstruction instr);
    void visitILOAD(BytecodeInstruction instr);
    void visitLLOAD(BytecodeInstruction instr);
    void visitFLOAD(BytecodeInstruction instr);
    void visitDLOAD(BytecodeInstruction instr);
    void visitALOAD(BytecodeInstruction instr);
    void visitILOAD_0(BytecodeInstruction instr);
    void visitILOAD_1(BytecodeInstruction instr);
    void visitILOAD_2(BytecodeInstruction instr);
    void visitILOAD_3(BytecodeInstruction instr);
    void visitLLOAD_0(BytecodeInstruction instr);
    void visitLLOAD_1(BytecodeInstruction instr);
    void visitLLOAD_2(BytecodeInstruction instr);
    void visitLLOAD_3(BytecodeInstruction instr);
    void visitFLOAD_0(BytecodeInstruction instr);
    void visitFLOAD_1(BytecodeInstruction instr);
    void visitFLOAD_2(BytecodeInstruction instr);
    void visitFLOAD_3(BytecodeInstruction instr);
    void visitDLOAD_0(BytecodeInstruction instr);
    void visitDLOAD_1(BytecodeInstruction instr);
    void visitDLOAD_2(BytecodeInstruction instr);
    void visitDLOAD_3(BytecodeInstruction instr);
    void visitALOAD_0(BytecodeInstruction instr);
    void visitALOAD_1(BytecodeInstruction instr);
    void visitALOAD_2(BytecodeInstruction instr);
    void visitALOAD_3(BytecodeInstruction instr);
    void visitIALOAD(BytecodeInstruction instr);
    void visitLALOAD(BytecodeInstruction instr);
    void visitFALOAD(BytecodeInstruction instr);
    void visitDALOAD(BytecodeInstruction instr);
    void visitAALOAD(BytecodeInstruction instr);
    void visitBALOAD(BytecodeInstruction instr);
    void visitCALOAD(BytecodeInstruction instr);
    void visitSALOAD(BytecodeInstruction instr);
    void visitISTORE(BytecodeInstruction instr);
    void visitLSTORE(BytecodeInstruction instr);
    void visitFSTORE(BytecodeInstruction instr);
    void visitDSTORE(BytecodeInstruction instr);
    void visitASTORE(BytecodeInstruction instr);
    void visitISTORE_0(BytecodeInstruction instr);
    void visitISTORE_1(BytecodeInstruction instr);
    void visitISTORE_2(BytecodeInstruction instr);
    void visitISTORE_3(BytecodeInstruction instr);
    void visitLSTORE_0(BytecodeInstruction instr);
    void visitLSTORE_1(BytecodeInstruction instr);
    void visitLSTORE_2(BytecodeInstruction instr);
    void visitLSTORE_3(BytecodeInstruction instr);
    void visitFSTORE_0(BytecodeInstruction instr);
    void visitFSTORE_1(BytecodeInstruction instr);
    void visitFSTORE_2(BytecodeInstruction instr);
    void visitFSTORE_3(BytecodeInstruction instr);
    void visitDSTORE_0(BytecodeInstruction instr);
    void visitDSTORE_1(BytecodeInstruction instr);
    void visitDSTORE_2(BytecodeInstruction instr);
    void visitDSTORE_3(BytecodeInstruction instr);
    void visitASTORE_0(BytecodeInstruction instr);
    void visitASTORE_1(BytecodeInstruction instr);
    void visitASTORE_2(BytecodeInstruction instr);
    void visitASTORE_3(BytecodeInstruction instr);
    void visitIASTORE(BytecodeInstruction instr);
    void visitLASTORE(BytecodeInstruction instr);
    void visitFASTORE(BytecodeInstruction instr);
    void visitDASTORE(BytecodeInstruction instr);
    void visitAASTORE(BytecodeInstruction instr);
    void visitBASTORE(BytecodeInstruction instr);
    void visitCASTORE(BytecodeInstruction instr);
    void visitSASTORE(BytecodeInstruction instr);
    void visitPOP(BytecodeInstruction instr);
    void visitPOP2(BytecodeInstruction instr);
    void visitDUP(BytecodeInstruction instr);
    void visitDUP_X1(BytecodeInstruction instr);
    void visitDUP_X2(BytecodeInstruction instr);
    void visitDUP2(BytecodeInstruction instr);
    void visitDUP2_X1(BytecodeInstruction instr);
    void visitDUP2_X2(BytecodeInstruction instr);
    void visitSWAP(BytecodeInstruction instr);
    void visitIADD(BytecodeInstruction instr);
    void visitLADD(BytecodeInstruction instr);
    void visitFADD(BytecodeInstruction instr);
    void visitDADD(BytecodeInstruction instr);
    void visitISUB(BytecodeInstruction instr);
    void visitLSUB(BytecodeInstruction instr);
    void visitFSUB(BytecodeInstruction instr);
    void visitDSUB(BytecodeInstruction instr);
    void visitIMUL(BytecodeInstruction instr);
    void visitLMUL(BytecodeInstruction instr);
    void visitFMUL(BytecodeInstruction instr);
    void visitDMUL(BytecodeInstruction instr);
    void visitIDIV(BytecodeInstruction instr);
    void visitLDIV(BytecodeInstruction instr);
    void visitFDIV(BytecodeInstruction instr);
    void visitDDIV(BytecodeInstruction instr);
    void visitIREM(BytecodeInstruction instr);
    void visitLREM(BytecodeInstruction instr);
    void visitFREM(BytecodeInstruction instr);
    void visitDREM(BytecodeInstruction instr);
    void visitINEG(BytecodeInstruction instr);
    void visitLNEG(BytecodeInstruction instr);
    void visitFNEG(BytecodeInstruction instr);
    void visitDNEG(BytecodeInstruction instr);
    void visitISHL(BytecodeInstruction instr);
    void visitLSHL(BytecodeInstruction instr);
    void visitISHR(BytecodeInstruction instr);
    void visitLSHR(BytecodeInstruction instr);
    void visitIUSHR(BytecodeInstruction instr);
    void visitLUSHR(BytecodeInstruction instr);
    void visitIAND(BytecodeInstruction instr);
    void visitLAND(BytecodeInstruction instr);
    void visitIOR(BytecodeInstruction instr);
    void visitLOR(BytecodeInstruction instr);
    void visitIXOR(BytecodeInstruction instr);
    void visitLXOR(BytecodeInstruction instr);
    void visitIINC(BytecodeInstruction instr);
    void visitI2L(BytecodeInstruction instr);
    void visitI2F(BytecodeInstruction instr);
    void visitI2D(BytecodeInstruction instr);
    void visitL2I(BytecodeInstruction instr);
    void visitL2F(BytecodeInstruction instr);
    void visitL2D(BytecodeInstruction instr);
    void visitF2I(BytecodeInstruction instr);
    void visitF2L(BytecodeInstruction instr);
    void visitF2D(BytecodeInstruction instr);
    void visitD2I(BytecodeInstruction instr);
    void visitD2L(BytecodeInstruction instr);
    void visitD2F(BytecodeInstruction instr);
    void visitI2B(BytecodeInstruction instr);
    void visitI2C(BytecodeInstruction instr);
    void visitI2S(BytecodeInstruction instr);
    void visitLCMP(BytecodeInstruction instr);
    void visitFCMPL(BytecodeInstruction instr);
    void visitFCMPG(BytecodeInstruction instr);
    void visitDCMPL(BytecodeInstruction instr);
    void visitDCMPG(BytecodeInstruction instr);
    void visitIFEQ(BytecodeInstruction instr);
    void visitIFNE(BytecodeInstruction instr);
    void visitIFLT(BytecodeInstruction instr);
    void visitIFGE(BytecodeInstruction instr);
    void visitIFGT(BytecodeInstruction instr);
    void visitIFLE(BytecodeInstruction instr);
    void visitIF_ICMPEQ(BytecodeInstruction instr);
    void visitIF_ICMPNE(BytecodeInstruction instr);
    void visitIF_ICMPLT(BytecodeInstruction instr);
    void visitIF_ICMPGE(BytecodeInstruction instr);
    void visitIF_ICMPGT(BytecodeInstruction instr);
    void visitIF_ICMPLE(BytecodeInstruction instr);
    void visitIF_ACMPEQ(BytecodeInstruction instr);
    void visitIF_ACMPNE(BytecodeInstruction instr);
    void visitGOTO(BytecodeInstruction instr);
    void visitJSR(BytecodeInstruction instr);
    void visitRET(BytecodeInstruction instr);
    void visitTABLESWITCH(BytecodeInstruction instr);
    void visitLOOKUPSWITCH(BytecodeInstruction instr);
    void visitIRETURN(BytecodeInstruction instr);
    void visitLRETURN(BytecodeInstruction instr);
    void visitFRETURN(BytecodeInstruction instr);
    void visitDRETURN(BytecodeInstruction instr);
    void visitARETURN(BytecodeInstruction instr);
    void visitRETURN(BytecodeInstruction instr);
    void visitGETSTATIC(BytecodeInstruction instr);
    void visitPUTSTATIC(BytecodeInstruction instr);
    void visitGETFIELD(BytecodeInstruction instr);
    void visitPUTFIELD(BytecodeInstruction instr);
    void visitINVOKEVIRTUAL(BytecodeInstruction instr);
    void visitINVOKESPECIAL(BytecodeInstruction instr);
    void visitINVOKESTATIC(BytecodeInstruction instr);
    void visitINVOKEINTERFACE(BytecodeInstruction instr);
    void visitNEW(BytecodeInstruction instr);
    void visitNEWARRAY(BytecodeInstruction instr);
    void visitANEWARRAY(BytecodeInstruction instr);
    void visitARRAYLENGTH(BytecodeInstruction instr);
    void visitATHROW(BytecodeInstruction instr);
    void visitCHECKCAST(BytecodeInstruction instr);
    void visitINSTANCEOF(BytecodeInstruction instr);
    void visitMONITORENTER(BytecodeInstruction instr);
    void visitMONITOREXIT(BytecodeInstruction instr);
    void visitWIDE(BytecodeInstruction instr);
    void visitMULTIANEWARRAY(BytecodeInstruction instr);
    void visitIFNULL(BytecodeInstruction instr);
    void visitIFNONNULL(BytecodeInstruction instr);
    void visitGOTO_W(BytecodeInstruction instr);
    void visitJSR_W(BytecodeInstruction instr);
    void visitBREAKPOINT(BytecodeInstruction instr);
    void visitIMPDEP1(BytecodeInstruction instr);
    void visitIMPDEP2(BytecodeInstruction instr);

}
